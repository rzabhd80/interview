version: "3.8"

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    env_file:
      - ../.env
    command: >
      redis-server 
      --appendonly yes 
      --appendfsync everysec 
      --save 900 1 
      --save 300 10 
      --maxmemory 2gb 
      --maxmemory-policy allkeys-lru

  flask-api:
    build:
      context: ..
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./services:/services
    depends_on:
      - redis
    environment:
      - FLASK_APP=app.py
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    env_file:
      - ../.env
    networks:
      - app-network

  spark-master:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    env_file:
      - ../.env
    ports:
      - "8080:8080"
      - "7077:7077"
    networks:
      - app-network
    volumes:
      - ./spark-jobs:/opt/spark-jobs
      - ./data:/opt/spark-data

  spark-worker:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
    env_file:
      - ../.env
    depends_on:
      - spark-master
    networks:
      - app-network
    volumes:
      - ./spark-jobs:/opt/spark-jobs
      - ./data:/opt/spark-data

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - app-network

volumes:
  redis-data:
  minio-data:

networks:
  app-network:
    driver: bridge
